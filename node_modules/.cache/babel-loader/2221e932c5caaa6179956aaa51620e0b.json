{"ast":null,"code":"var _jsxFileName = \"/Users/cindyli/Downloads/pokemon2/my-app/src/components/ColorViz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport useFetch from \"../useFetch\";\nimport { create } from \"d3\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ColorViz() {\n  _s();\n\n  const svgRef = useRef();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [types, setTypes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [typecolor, setTypeColor] = useState([]);\n\n  const getTypes = async () => {\n    try {\n      async function getPokemonUnderType(num) {\n        const res = await fetch(`https://pokeapi.co/api/v2/type/${num}`);\n\n        if (!res.ok) {\n          throw Error(\"could not fetch data\");\n        }\n\n        const data = await res.json();\n        const datapokemon = data.pokemon;\n        const converteddatapokemon = datapokemon.filter(pokemon => {\n          const url = pokemon.pokemon.url.split(\"/\");\n          const pokeId = url[url.length - 2];\n          return Number(pokeId) < 10000;\n        });\n        const datapokemonIds = converteddatapokemon.map(pokemon => {\n          const url = pokemon.pokemon.url.split(\"/\");\n          const pokeId = url[url.length - 2];\n          return pokeId;\n        }); // console.log(datapokemonIds)\n\n        setTypes(currentList => [...currentList, {\n          name: data.name,\n          urls: datapokemonIds\n        }]); // console.log(types)\n      }\n\n      for (let i = 1; i < 19; i++) {\n        getPokemonUnderType(i);\n      }\n\n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n    }\n  };\n\n  const getPokemonByColor = async () => {\n    try {\n      async function getPokemonUnderColor(num) {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon-color/${num}`);\n\n        if (!res.ok) {\n          throw Error(\"could not fetch data\");\n        }\n\n        const data = await res.json();\n        const datapokemon = data.pokemon_species;\n        const datapokemonIds = datapokemon.map(pokemon => {\n          const url = pokemon.url.split(\"/\");\n          return url[url.length - 2];\n        });\n        setColors(currentList => [...currentList, {\n          name: data.name,\n          urls: datapokemonIds\n        }]); // console.log(colors)\n      }\n\n      for (let i = 1; i < 11; i++) {\n        getPokemonUnderColor(i);\n      }\n\n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n    }\n  };\n\n  const findTypesColor = async () => {\n    // function getKeyByValue(object, value) {\n    //   return Object.keys(object).find(key => {\n    //     if (object[key].includes(value))\n    //       return object[key]\n    //   });\n    // }\n    const typesWithColor = types.map(pokemonInType => {\n      console.log(pokemonInType.name);\n      const type = pokemonInType.name;\n      const urls = pokemonInType.urls; // return {...pokemonInType,name:'Hi'}\n\n      const withColor = urls.map(url => {\n        // console.log(\"checking \"+url);\n        const filteredColor = colors.filter(color => color.urls.includes(url));\n        const pokemonColor = filteredColor[0].name;\n        const newData = {\n          id: url,\n          color: colors.filter(color => color.urls.includes(url))[0].name\n        };\n        return {\n          url,\n          pokemonColor\n        };\n      });\n      return { ...pokemonInType,\n        urls: withColor\n      };\n    }); // console.log(typesWithColor )\n    // setTypes(typesWithColor)\n    // console.log(types)\n  };\n\n  useEffect(() => {\n    getTypes();\n    getPokemonByColor();\n    findTypesColor();\n  }, []);\n  useEffect(() => {\n    const w = 400;\n    const h = 200;\n    const svg = d3.select(svgRef.current).attr(\"width\", w).attr(\"height\", h).style(\"background-color\", \"orange\").attr(\"fill\", \"white\").append(\"text\").text(\"Coming soon\").attr(\"x\", 10).attr(\"y\", 20);\n  }, [!isLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ColorViz, \"OSi0XdRkrf4Fu2nRDpLnhnr4YTQ=\");\n\n_c = ColorViz;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorViz\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","useFetch","create","type","ColorViz","svgRef","error","setError","isLoading","setLoading","types","setTypes","colors","setColors","typecolor","setTypeColor","getTypes","getPokemonUnderType","num","res","fetch","ok","Error","data","json","datapokemon","pokemon","converteddatapokemon","filter","url","split","pokeId","length","Number","datapokemonIds","map","currentList","name","urls","i","err","message","getPokemonByColor","getPokemonUnderColor","pokemon_species","findTypesColor","typesWithColor","pokemonInType","console","log","withColor","filteredColor","color","includes","pokemonColor","newData","id","w","h","svg","select","current","attr","style","append","text"],"sources":["/Users/cindyli/Downloads/pokemon2/my-app/src/components/ColorViz.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport useFetch from \"../useFetch\";\nimport { create } from \"d3\";\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nexport default function ColorViz() {\n  const svgRef = useRef();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [types, setTypes] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [typecolor, setTypeColor] = useState([]);\n  const getTypes = async () => {\n    try {\n      async function getPokemonUnderType(num){\n        const res = await fetch(`https://pokeapi.co/api/v2/type/${num}`);\n        if (!res.ok) {\n          throw Error(\"could not fetch data\");\n        }\n        const data = await res.json();\n        const datapokemon = data.pokemon;\n        const converteddatapokemon = datapokemon.filter(pokemon => {\n          const url = pokemon.pokemon.url.split(\"/\");\n          const pokeId = url[url.length - 2]\n          return Number(pokeId) < 10000\n        });\n        const datapokemonIds = converteddatapokemon.map(pokemon => {\n          const url = pokemon.pokemon.url.split(\"/\");\n          const pokeId = url[url.length - 2]\n          return pokeId\n        });\n        // console.log(datapokemonIds)\n        setTypes((currentList) => [\n          ...currentList,\n          {\n            name: data.name,\n            urls: datapokemonIds,\n          },\n        ]);\n        // console.log(types)\n      }\n      for (let i = 1; i < 19; i++) {\n        getPokemonUnderType(i);\n      }\n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n    }\n  };\n\n  const getPokemonByColor = async () => {\n    try {\n      async function getPokemonUnderColor(num){\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon-color/${num}`);\n        if (!res.ok) {\n          throw Error(\"could not fetch data\");\n        }\n        const data = await res.json();\n        const datapokemon = data.pokemon_species;\n        const datapokemonIds = datapokemon.map(pokemon => {\n          const url = pokemon.url.split(\"/\");\n          return url[url.length - 2];\n        })\n        setColors((currentList) => [\n          ...currentList,\n          {\n            name: data.name,\n            urls: datapokemonIds\n          },\n        ]);\n        // console.log(colors)\n      }\n      for (let i = 1; i < 11; i++) {\n        getPokemonUnderColor(i);\n      }\n      setLoading(false);\n      setError(null);\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n    }\n  };\n  const findTypesColor = async() =>{\n    // function getKeyByValue(object, value) {\n    //   return Object.keys(object).find(key => {\n    //     if (object[key].includes(value))\n    //       return object[key]\n    //   });\n    // }\n    const typesWithColor = types.map(pokemonInType => {\n      console.log(pokemonInType.name)\n      const type = pokemonInType.name\n      const urls = pokemonInType.urls;\n      // return {...pokemonInType,name:'Hi'}\n      const withColor = urls.map(url => {\n        // console.log(\"checking \"+url);\n        const filteredColor = colors.filter(color => color.urls.includes(url));\n        const pokemonColor = filteredColor[0].name\n        const newData = {\n          id: url,\n          color:  colors.filter(color => color.urls.includes(url))[0].name,\n        } \n        return {url,pokemonColor} \n        \n      })\n      return {...pokemonInType,  urls:withColor}\n    });\n    // console.log(typesWithColor )\n    // setTypes(typesWithColor)\n    // console.log(types)\n  }\n  useEffect(() => {\n    getTypes();\n    getPokemonByColor();\n    findTypesColor();\n  }, []);\n  useEffect(() => {\n    const w = 400;\n    const h = 200;\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .style(\"background-color\", \"orange\")\n      .attr(\"fill\", \"white\")\n      .append(\"text\").text(\"Coming soon\")\n      .attr(\"x\",10)\n      .attr(\"y\",20);\n  },[!isLoading])\n  return (\n      <>\n      <svg ref={svgRef}></svg>\n      {/* <div>{!isLoading && types[35].name}</div> */}\n      </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}